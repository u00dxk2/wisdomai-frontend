{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\Computer Science\\\\Local Git Storage\\\\home\\\\chatddk-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\"); // For user input\n  const [chatHistory, setChatHistory] = useState([]); // To store the conversation\n\n  const handleSendMessage = async () => {\n    if (!message) return;\n\n    // Add the user's message to the chat history\n    setChatHistory(prev => [...prev, {\n      role: \"user\",\n      content: message\n    }]);\n    try {\n      // Send the message to the backend\n      const response = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      const data = await response.json();\n\n      // Add the bot's reply to the chat history\n      setChatHistory(prev => [...prev, {\n        role: \"assistant\",\n        content: data.reply\n      }]);\n    } catch (error) {\n      console.error(\"Error communicating with backend:\", error);\n    }\n    setMessage(\"\"); // Clear the input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatDDK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        height: \"300px\",\n        overflowY: \"auto\",\n        marginBottom: \"10px\"\n      },\n      children: chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"5px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: entry.role === \"user\" ? \"You:\" : \"ChatDDK:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), \" \", entry.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type your message...\",\n      style: {\n        width: \"80%\",\n        padding: \"10px\",\n        marginRight: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      style: {\n        padding: \"10px 20px\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EXvBHp4uB8b2hbMlTy8OWb1libE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","chatHistory","setChatHistory","handleSendMessage","prev","role","content","response","fetch","method","headers","body","JSON","stringify","data","json","reply","error","console","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","marginBottom","map","entry","index","margin","type","value","onChange","e","target","placeholder","width","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/Computer Science/Local Git Storage/home/chatddk-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState(\"\"); // For user input\r\n  const [chatHistory, setChatHistory] = useState([]); // To store the conversation\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!message) return;\r\n\r\n    // Add the user's message to the chat history\r\n    setChatHistory((prev) => [...prev, { role: \"user\", content: message }]);\r\n\r\n    try {\r\n      // Send the message to the backend\r\n      const response = await fetch(\"http://localhost:5000/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      // Add the bot's reply to the chat history\r\n      setChatHistory((prev) => [...prev, { role: \"assistant\", content: data.reply }]);\r\n    } catch (error) {\r\n      console.error(\"Error communicating with backend:\", error);\r\n    }\r\n\r\n    setMessage(\"\"); // Clear the input field\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", fontFamily: \"Arial, sans-serif\" }}>\r\n      <h1>ChatDDK</h1>\r\n      <div\r\n        style={{\r\n          border: \"1px solid #ccc\",\r\n          padding: \"10px\",\r\n          height: \"300px\",\r\n          overflowY: \"auto\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n      >\r\n        {chatHistory.map((entry, index) => (\r\n          <div key={index} style={{ margin: \"5px 0\" }}>\r\n            <strong>{entry.role === \"user\" ? \"You:\" : \"ChatDDK:\"}</strong> {entry.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        placeholder=\"Type your message...\"\r\n        style={{ width: \"80%\", padding: \"10px\", marginRight: \"10px\" }}\r\n      />\r\n      <button onClick={handleSendMessage} style={{ padding: \"10px 20px\" }}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}